// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/02/FullAdder.hdl
/**
 * Computes the sum of three bits.
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    // IMPLEMENT CARRY PART 
    // Make carry sub-parts 
    And (a=a, b=b, out=ANDab); 
    
    And (a=b, b=c, out=ANDbc); 
   
    And (a=a, b=c, out=ANDac);

    // Join sub-parts then output to carry part 
    Or (a=ANDab, b=ANDbc, out=ORANDabANDbc);
    Or (a=ORANDabANDbc, b=ANDac, out=carry);


    // IMPLEMENT SUM PART
    // Make sum sub-parts
    Xor (a=a, b=b, out=XORab);
    Not (in=c, out=NOTc);
    And (a=XORab, b=NOTc, out=ANDXORabNOTc);

    Xor (a=b, b=c, out=XORbc);
    Not (in=a, out=NOTa);
    And (a=XORbc, b=NOTa, out=ANDXORbcNOTa);

    Xor (a=a, b=c, out=XORac);
    Not (in=b, out=NOTb);
    And (a=XORac, b=NOTb, out=ANDXORacNOTb);

    And (a=ANDac, b=b, out=ANDabc);

    // Join sub-parts then output to sum part
    Or (a=ANDXORabNOTc, b=ANDXORbcNOTa, out=temp0);
    Or (a=ANDXORacNOTb, b=temp0, out=temp1);
    Or (a=temp1, b=ANDabc, out=sum);
    
}
